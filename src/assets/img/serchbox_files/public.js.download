//LazyImages
(function () {
  if ('loading' in HTMLImageElement.prototype) {
    var lazyImages = document.querySelectorAll('.lazy-loade img');

    for (var img of lazyImages) {
      if (!img.complete) { img.parentNode.classList.add('lazy-image_waiting'); img.addEventListener('load', lazyimageload, false); img.addEventListener('error', lazyimageerror, false); }
    }
    function lazyimageload(e) { e.currentTarget.parentNode.classList.remove('lazy-image_waiting'); }
    function lazyimageerror(e) {
      var parent = e.currentTarget.parentNode; parent.classList.remove('lazy-image_waiting'); parent.classList.add('lazy-image_error');
      setTimeout(function () { parent.classList.add('lazy-image_error_show'); }, 60);
    }
  }
})();
//num2persain
"use strict"; var delimiter = " و ", zero = "صفر", negative = "منفی ", letters = [["", "یک", "دو", "سه", "چهار", "پنج", "شش", "هفت", "هشت", "نه"], ["ده", "یازده", "دوازده", "سیزده", "چهارده", "پانزده", "شانزده", "هفده", "هجده", "نوزده", "بیست"], ["", "", "بیست", "سی", "چهل", "پنجاه", "شصت", "هفتاد", "هشتاد", "نود"], ["", "یکصد", "دویست", "سیصد", "چهارصد", "پانصد", "ششصد", "هفتصد", "هشتصد", "نهصد"], ["", " هزار", " میلیون", " میلیارد", " بیلیون", " بیلیارد", " تریلیون", " تریلیارد", " کوآدریلیون", " کادریلیارد", " کوینتیلیون", " کوانتینیارد", " سکستیلیون", " سکستیلیارد", " سپتیلیون", " سپتیلیارد", " اکتیلیون", " اکتیلیارد", " نانیلیون", " نانیلیارد", " دسیلیون", " دسیلیارد"]], decimalSuffixes = ["", "دهم", "صدم", "هزارم", "ده‌هزارم", "صد‌هزارم", "میلیونوم", "ده‌میلیونوم", "صدمیلیونوم", "میلیاردم", "ده‌میلیاردم", "صد‌‌میلیاردم"], prepareNumber = function (e) { var t = e; return "number" == typeof t && (t = t.toString()), t.length % 3 == 1 ? t = "00".concat(t) : t.length % 3 == 2 && (t = "0".concat(t)), t.replace(/\d{3}(?=\d)/g, "$&*").split("*") }, tinyNumToWord = function (e) { if (0 === parseInt(e, 0)) return ""; var t = parseInt(e, 0); if (t < 10) return letters[0][t]; if (t <= 20) return letters[1][t - 10]; if (t < 100) { var r = t % 10, n = (t - r) / 10; return r > 0 ? letters[2][n] + delimiter + letters[0][r] : letters[2][n] } var i = t % 10, u = (t - t % 100) / 100, s = (t - (100 * u + i)) / 10, a = [letters[3][u]], o = 10 * s + i; return 0 === o ? a.join(delimiter) : (o < 10 ? a.push(letters[0][o]) : o <= 20 ? a.push(letters[1][o - 10]) : (a.push(letters[2][s]), i > 0 && a.push(letters[0][i])), a.join(delimiter)) }, convertDecimalPart = function (e) { return "" === (e = e.replace(/0*$/, "")) ? "" : (e.length > 11 && (e = e.substr(0, 11)), " ممیز " + Num2persian(e) + " " + decimalSuffixes[e.length]) }, Num2persian = function (e) { e = e.toString().replace(/[^0-9.-]/g, ""); var t = !1, r = parseFloat(e); if (isNaN(r)) return zero; if (0 === r) return zero; r < 0 && (t = !0, e = e.replace(/-/g, "")); var n = "", i = e, u = e.indexOf("."); if (u > -1 && (i = e.substring(0, u), n = e.substring(u + 1, e.length)), i.length > 66) return "خارج از محدوده"; for (var s = prepareNumber(i), a = [], o = 0; o < s.length; o += 1) { var l = tinyNumToWord(s[o]); "" !== l && a.push(l + letters[4][s.length - (o + 1)]) } return n.length > 0 && (n = convertDecimalPart(n)), (t ? negative : "") + a.join(delimiter) + n }; String.prototype.toPersianLetter = function () { return Num2persian(this) }, Number.prototype.toPersianLetter = function () { return Num2persian(parseFloat(this).toString()) }, String.prototype.num2persian = function () { return Num2persian(this) }, Number.prototype.num2persian = function () { return Num2persian(parseFloat(this).toString()) };
var Utravs_VA = {
  init: function () {
    //Utravs_VA?.init_popup();
    //Utravs_VA?.init_tooltip();
    //Utravs_VA?.init_show_hid_password();
    Utravs_VA?.init_sidebar();
    // Utravs_VA?.init_tab();
    Utravs_VA?.init_Date();
    // Utravs_VA?.init_faqs();
    Utravs_VA?.init_faqs();
  },

  init_faqs: function () {
    document.querySelectorAll(".faqs_list .faqs_list__item").forEach((event) => {
      event.addEventListener('click', () => {
        if (event.classList.contains("expand")) { event.classList.remove("expand"); }
        else { event.classList.add("expand"); }
      });
    });
  },
  init_sidebar: function () {
    // ------ Sticky Sidebar Inside  ------ \\
    if (document.querySelector('.row-master_sidbar--result')) {
      let resultSidebar = new StickySidebar('.row-master_sidbar--result', {
          topSpacing: 110,
          bottomSpacing: 0,
          minWidth: 1000,
          stickyClass: 'is-affixed',
          containerSelector: '.row-master',
          innerWrapperSelector: '.side-wrapper',
          resizeSensor: false,
      });
      setInterval(() => {
        resultSidebar.updateSticky();
      }, 50);

    }
    // #('.btn-filter').click(function (e) {
    //     e.preventDefault();
    //     if (#(this).hasClass('active')) {
    //         #(this).removeClass('active');
    //         #(this).text('باز کردن فیلترها');
    //         #('.row.result-master .column__sidebar').removeClass('active');
    //     } else {
    //         #(this).addClass('active');
    //         #(this).text('بستن فیلترها');
    //         #('.row.result-master .column__sidebar').addClass('active');
    //     }
    // });
    // #(document).click(function (e) {
    //     if (!#(e.target).closest('.row.result-master .column__sidebar').length && !#(e.target).closest('.btn-filter').length) {
    //         #('.row.result-master .column__sidebar').removeClass('active');
    //         #('.btn-filter').removeClass('active');
    //     }
    // });
  },
  // #################### Bus tab
  // init_tab: function () {
  //   #('.tab_item > a').click(function (e) {
  //     e.preventDefault();
  //     #(this).siblings('.active').removeClass('active');
  //     #(this).addClass('active');
  //     #(this).closest('.tab').find('.tab_content .active').removeClass('active');
  //     #(this).closest('.tab').find('.tab_content > div').eq(#(this).index()).addClass('active');
  //   });
  // },
  init_Date: function () {
    Date.prototype.addSeconds = function (seconds) {
      this.setSeconds(this.getSeconds() + seconds);
      return this;
    };

    Date.prototype.addMinutes = function (minutes) {
      this.setMinutes(this.getMinutes() + minutes);
      return this;
    };

    Date.prototype.addHours = function (hours) {
      this.setHours(this.getHours() + hours);
      return this;
    };

    Date.prototype.addDays = function (days) {
      this.setDate(this.getDate() + days);
      return this;
    };

    Date.prototype.addWeeks = function (weeks) {
      this.addDays(weeks * 7);
      return this;
    };

    Date.prototype.addMonths = function (months) {
      var dt = this.getDate();
      this.setMonth(this.getMonth() + months);
      var currDt = this.getDate();
      if (dt !== currDt) {
        this.addDays(-currDt);
      }
      return this;
    };

    Date.prototype.addYears = function (years) {
      var dt = this.getDate();
      this.setFullYear(this.getFullYear() + years);
      var currDt = this.getDate();
      if (dt !== currDt) { this.addDays(-currDt); }
      return this;
    };
  },
};

// function escapeRegExp(string) { //#useless
//   return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
// }

// function replaceAll(str, find, replace) { return str.replace(new RegExp(escapeRegExp(find), 'g'), replace); } //#useless

function utravsclarity(c, l, a, r, i, t, y) {
  c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };
  t = l.createElement(r); t.async = 1; t.src = "https://www.clarity.ms/tag/" + i;
  y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);
};
function WebengageAutomation(w, e, b, n, g) {
  function o(e, t) {
    e[t[t.length - 1]] = function () {
      r.__queue.push([t.join("."), arguments])
    }
  }
  var i, s, r = w[b],
    z = " ",
    l = "init options track screen onReady".split(z),
    a = "feedback survey notification".split(z),
    c = "options render clear abort".split(z),
    p = "Open Close Submit Complete View Click".split(z),
    u = "identify login logout setAttribute".split(z);
  if (!r || !r.__v) {
    for (w[b] = r = {
      __queue: [],
      is_spa: 1, //Change this to 0 if you do not wish to use default SPA behaviour of WebEngage SDK
      __v: "6.0",
      user: {}
    }, i = 0; i < l.length; i++) o(r, [l[i]]);
    for (i = 0; i < a.length; i++) {
      for (r[a[i]] = {}, s = 0; s < c.length; s++) o(r[a[i]], [a[i], c[s]]);
      for (s = 0; s < p.length; s++) o(r[a[i]], [a[i], "on" + p[s]])
    }
    for (i = 0; i < u.length; i++) o(r.user, ["user", u[i]]);
    setTimeout(function () {
      var f = e.createElement("script");
      var d = e.getElementById("_webengage_script_tag");
      f.type = "text/javascript";
      f.async = !0;
      f.defer = !0;
      f.src = ("https:" == e.location.protocol ? "https://widgets.ir0.webengage.com" : "http://widgets.ir0.webengage.com") + "/js/webengage-min-v-6.0.js";
      d.parentNode.insertBefore(f, d);
    })
  }
}
function googletagmanager(w, d, s, l, i) {
  //  w[l]=w[l]||[];
  window.dataLayer = window.dataLayer || [];
  window.dataLayer.push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
  var f = d.getElementsByTagName(s)[0],
    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
}
function gtag() {
  window.dataLayer = window.dataLayer || [];
  //console.log(arguments);
  window.dataLayer.push(arguments);
}
function richat() {
  window.RAYCHAT_TOKEN = "2b1eb784-b7ab-464d-942d-7ebb64026c47";
  (function () {
    d = document;
    s = d.createElement("script");
    s.src = "https://widget-react.raychat.io/install/widget.js";
    s.async = 1;
    d.getElementsByTagName("head")[0].appendChild(s);
  })();
};
// function importScripts1(url) {  //#useless
//   var element = document.createElement('script');
//   // element.id = "interceptedAvailableResponseId";
//   element.setAttribute("src", url);
//   element.setAttribute("type", "text/javascript");
//   element.appendChild(document.createTextNode(""));
//   document.body.appendChild(element);
// }


var webengage;

window.onload = function () {
  Utravs_VA?.init();

  firstRunInterval = setInterval(firstinit, 100);

  // ######################--Leaflet Map Run
  mapInterval = setInterval(checkMapInit, 100);
  // ######################--Leaflet Map Run End

  // console.log(`
  // ██╗░░░██╗████████╗██████╗░░█████╗░██╗░░░██╗░██████╗
  // ██║░░░██║╚══██╔══╝██╔══██╗██╔══██╗██║░░░██║██╔════╝
  // ██║░░░██║░░░██║░░░██████╔╝███████║╚██╗░██╔╝╚█████╗░
  // ██║░░░██║░░░██║░░░██╔══██╗██╔══██║░╚████╔╝░░╚═══██╗
  // ╚██████╔╝░░░██║░░░██║░░██║██║░░██║░░╚██╔╝░░██████╔╝
  // ░╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝░░░╚═╝░░░╚═════╝░
  //                 We Are Hiring
  //                 Hr@Utravs.Com
  // `);

  WebengageAutomation(window, document, "webengage");

  if (location.href.indexOf('/utravs.com') > -1) {

    // setTimeout(() => {
    //   richat();
    // }, 10000);

    setTimeout(() => {
      googletagmanager(window, document, 'script', 'dataLayer', 'GTM-WKK282R');
    }, 8000);

    setTimeout(() => {
      webengage.init('14507cb68');
    }, 9000);

    // utravsclarity(window, document, "clarity", "script", "apjmcxlu3c")
  }

  // if (location.href.indexOf('//beta.utravs.com') > -1) {
  //   utravsclarity(window, document, "clarity", "script", "a4ykhoedga");
  //   webengage.init('82617b90');
  // }
  //  importScripts('https://widgets.ir0.webengage.com/js/service-worker.js');


  var newVersionId = "14010824";
  try {
    var versionId = localStorage.getItem('versionId');
    if (versionId != newVersionId) {
      localStorage.setItem('versionId', newVersionId);
      var cookies = document.cookie.split(";");
      for (var i = 0; i < cookies.length; i++) {
        var cookie = cookies[i];
        var eqPos = cookie.indexOf("=");
        var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
        document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
      }
    }
  }
  catch (error) { window.location.reload(); }
}

function firstinit() {
  if (document.querySelector('.firstinit')) {
    document.querySelectorAll('.firstinit').forEach((el) => {
      //console.log('start check init');
      el.classList.remove('firstinit');
      Utravs_VA?.init();
      clearInterval(firstRunInterval);
    });
  }
}

// ######################--Leaflet Map function
function checkMapInit() {
  var mapElement = document.querySelectorAll(".initMap");
  if (mapElement.length) {
    mapElement.forEach((elm) => {
      elm.classList.remove("initMap");
      const d = elm.getAttribute('datainit').split(';');
      // console.log(d);
      mapRun(+d[0], +d[1], +d[2], d[3], d[4], d[5]);
    });
    clearInterval(mapInterval);
  }
}
function mapRun(lat, long, zoom = 12, mapid = '', title = '') {
  var mapdetail = L.map('map' + mapid.toString()).setView([lat, long], zoom);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: ''
  }).addTo(mapdetail);
  var greenIcon = L.icon({
    iconUrl: '/assets2/images/pin.png',
    iconAnchor: [16, 16],
    popupAnchor: [0, 0],
    iconSize: [30, 30],
  });
  L.marker([lat, long], { icon: greenIcon }).addTo(mapdetail).bindPopup(title);
};

